{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olivi\\\\OneDrive\\\\Documents\\\\GitHub\\\\Example4402Project\\\\frontend4402\\\\src\\\\componets\\\\ClassManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TextField, Button, Typography, Box, Tabs, Tab, Snackbar, Alert, Badge, MenuItem, Select, InputLabel, FormControl } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\n\n// TabPanel Component for Tab Content Management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `tabpanel-${index}`,\n    \"aria-labelledby\": `tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired\n};\nfunction ClassManagement({\n  setNotifications\n}) {\n  _s();\n  const [tabIndex, setTabIndex] = useState(0);\n  const [className, setClassName] = useState(\"\");\n  const [schedule, setSchedule] = useState(\"\");\n  const [members, setMembers] = useState([]);\n  const [newMember, setNewMember] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n  const [classes, setClasses] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0); // Track unread notifications\n\n  // Available classes and their corresponding schedules\n  const classOptions = [{\n    name: \"Cycling\",\n    schedules: [\"Monday 7:00 AM - 8:00 AM\", \"Tuesday 9:00 AM - 10:00 AM\", \"Wednesday 12:00 PM - 1:00 PM\", \"Thursday 9:00 AM - 10:00 AM\", \"Friday 7:00 AM - 8:00 AM\", \"Saturday 10:00 AM - 11:00 AM\", \"Sunday 10:00 AM - 11:00 AM\"]\n  }, {\n    name: \"Pilates\",\n    schedules: [\"Monday 12:00 PM - 1:00 PM\", \"Tuesday 7:00 AM - 8:00 AM\", \"Wednesday 9:00 AM - 10:00 AM\", \"Thursday 6:00 PM - 7:00 PM\", \"Friday 6:00 PM - 7:00 PM\", \"Saturday 8:00 AM - 9:00 AM\", \"Sunday 4:00 PM - 5:00 PM\"]\n  }, {\n    name: \"Boxing\",\n    schedules: [\"Monday 9:00 AM - 10:00 AM\", \"Tuesday 6:00 PM - 7:00 PM\", \"Wednesday 7:00 AM - 8:00 AM\", \"Thursday 12:00 PM - 1:00 PM\", \"Friday 12:00 PM - 1:00 PM\", \"Saturday 4:00 PM - 5:00 PM\", \"Sunday 1:00 PM - 2:00 PM\"]\n  }, {\n    name: \"Zumba\",\n    schedules: [\"Monday 6:00 PM - 7:00 PM\", \"Tuesday 12:00 PM - 1:00 PM\", \"Wednesday 6:00 PM - 7:00 PM\", \"Thursday 7:00 AM - 8:00 AM\", \"Friday 9:00 AM - 10:00 AM\", \"Saturday 1:00 PM - 2:00 PM\", \"Sunday 8:00 AM - 9:00 AM\"]\n  }];\n\n  // Handle switching tabs\n  const handleTabChange = (event, newValue) => {\n    setTabIndex(newValue);\n\n    // Reset unread count if the notifications tab is selected\n    if (newValue === 2) {\n      setUnreadCount(0);\n    }\n  };\n\n  // Handle class selection and update schedule options\n  const handleClassChange = event => {\n    const selectedClass = event.target.value;\n    setClassName(selectedClass);\n\n    // Clear the selected schedule when class is changed\n    setSchedule(\"\");\n  };\n\n  // Handle schedule selection based on selected class\n  const handleScheduleChange = event => {\n    setSchedule(event.target.value);\n  };\n\n  // Add Class handler\n  const handleAddClass = () => {\n    // Check if className or schedule is empty\n    if (className.trim() === \"\" || schedule.trim() === \"\") {\n      setSnackbarSeverity(\"error\");\n      setSnackbarMessage(\"Error: Please fill in all class details.\");\n      setOpenSnackbar(true);\n      setNotifications(prev => [...prev, \"Error: Please fill in all class details.\"]);\n      return;\n    }\n\n    // Add the new class to the classes list\n    setClasses(prevClasses => [...prevClasses, {\n      className,\n      schedule\n    }]);\n\n    // Success notification\n    const successMessage = `Class \"${className}\" scheduled for ${schedule} added successfully!`;\n    setNotifications(prev => [...prev, successMessage]);\n    setUnreadCount(prevCount => prevCount + 1); // Increase unread notification count\n\n    setSnackbarSeverity(\"success\");\n    setSnackbarMessage(successMessage);\n    setOpenSnackbar(true);\n\n    // Clear the input fields\n    setClassName(\"\");\n    setSchedule(\"\");\n  };\n\n  // Enroll Member handler\n  const handleAddMember = () => {\n    if (newMember.trim() === \"\") {\n      setSnackbarSeverity(\"error\");\n      setSnackbarMessage(\"Error: Please provide a valid member name.\");\n      setOpenSnackbar(true);\n      setNotifications(prev => [...prev, \"Error: Please provide a valid member name.\"]);\n      return;\n    }\n\n    // Prevent duplicate members\n    if (members.includes(newMember)) {\n      setSnackbarSeverity(\"error\");\n      setSnackbarMessage(`Error: Member \"${newMember}\" already exists.`);\n      setOpenSnackbar(true);\n      setNotifications(prev => [...prev, `Error: Member \"${newMember}\" already exists.`]);\n      return;\n    }\n\n    // Add the new member\n    setMembers(prev => [...prev, newMember]);\n    setNotifications(prev => [...prev, `Member \"${newMember}\" enrolled!`]);\n    setUnreadCount(prevCount => prevCount + 1); // Increase unread notification count\n\n    setSnackbarSeverity(\"success\");\n    setSnackbarMessage(`Member \"${newMember}\" enrolled successfully!`);\n    setOpenSnackbar(true);\n    setNewMember(\"\");\n  };\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Class Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: tabIndex,\n      onChange: handleTabChange,\n      \"aria-label\": \"Class management tabs\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Add Classes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Enroll Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"View Schedule\",\n        icon: /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: unreadCount,\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabIndex,\n      index: 0,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Add a New Class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Class Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: className,\n            onChange: handleClassChange,\n            label: \"Class Name\",\n            children: classOptions.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.name,\n              children: option.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: schedule,\n            onChange: handleScheduleChange,\n            label: \"Schedule\",\n            disabled: !className // Disable schedule dropdown until a class is selected\n            ,\n            children: className && classOptions.find(option => option.name === className).schedules.map((time, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: time,\n              children: time\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddClass,\n        children: \"Add Class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: tabIndex,\n      index: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"View Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), classes.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No classes scheduled yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this) : classes.map((cls, index) => /*#__PURE__*/_jsxDEV(Typography, {\n        children: [cls.className, \" - \", cls.schedule]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbarSeverity,\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(ClassManagement, \"1qhGzWdMQXMKBO8sYjIhWpNJ2xU=\");\n_c2 = ClassManagement;\nexport default ClassManagement;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"ClassManagement\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Box","Tabs","Tab","Snackbar","Alert","Badge","MenuItem","Select","InputLabel","FormControl","PropTypes","jsxDEV","_jsxDEV","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","number","isRequired","ClassManagement","setNotifications","_s","tabIndex","setTabIndex","className","setClassName","schedule","setSchedule","members","setMembers","newMember","setNewMember","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","classes","setClasses","unreadCount","setUnreadCount","classOptions","name","schedules","handleTabChange","event","newValue","handleClassChange","selectedClass","target","handleScheduleChange","handleAddClass","trim","prev","prevClasses","successMessage","prevCount","handleAddMember","includes","handleCloseSnackbar","variant","gutterBottom","onChange","label","icon","badgeContent","color","mb","fullWidth","margin","map","option","disabled","find","time","onClick","length","cls","open","autoHideDuration","onClose","severity","_c2","$RefreshReg$"],"sources":["C:/Users/olivi/OneDrive/Documents/GitHub/Example4402Project/frontend4402/src/componets/ClassManagement.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Tabs,\r\n  Tab,\r\n  Snackbar,\r\n  Alert,\r\n  Badge,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// TabPanel Component for Tab Content Management\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`tabpanel-${index}`}\r\n      aria-labelledby={`tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  value: PropTypes.number.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction ClassManagement({ setNotifications }) {\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const [className, setClassName] = useState(\"\");\r\n  const [schedule, setSchedule] = useState(\"\");\r\n  const [members, setMembers] = useState([]);\r\n  const [newMember, setNewMember] = useState(\"\");\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\r\n  const [classes, setClasses] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0); // Track unread notifications\r\n  \r\n  // Available classes and their corresponding schedules\r\n  const classOptions = [\r\n    { name: \"Cycling\", schedules: [\"Monday 7:00 AM - 8:00 AM\", \"Tuesday 9:00 AM - 10:00 AM\", \"Wednesday 12:00 PM - 1:00 PM\", \"Thursday 9:00 AM - 10:00 AM\", \"Friday 7:00 AM - 8:00 AM\", \"Saturday 10:00 AM - 11:00 AM\" , \"Sunday 10:00 AM - 11:00 AM\"] },\r\n    { name: \"Pilates\", schedules: [\"Monday 12:00 PM - 1:00 PM\", \"Tuesday 7:00 AM - 8:00 AM\", \"Wednesday 9:00 AM - 10:00 AM\", \"Thursday 6:00 PM - 7:00 PM\", \"Friday 6:00 PM - 7:00 PM\", \"Saturday 8:00 AM - 9:00 AM\" , \"Sunday 4:00 PM - 5:00 PM\"] },\r\n    { name: \"Boxing\", schedules: [\"Monday 9:00 AM - 10:00 AM\", \"Tuesday 6:00 PM - 7:00 PM\", \"Wednesday 7:00 AM - 8:00 AM\", \"Thursday 12:00 PM - 1:00 PM\", \"Friday 12:00 PM - 1:00 PM\", \"Saturday 4:00 PM - 5:00 PM\" , \"Sunday 1:00 PM - 2:00 PM\"] },\r\n    { name: \"Zumba\", schedules: [\"Monday 6:00 PM - 7:00 PM\", \"Tuesday 12:00 PM - 1:00 PM\", \"Wednesday 6:00 PM - 7:00 PM\", \"Thursday 7:00 AM - 8:00 AM\", \"Friday 9:00 AM - 10:00 AM\", \"Saturday 1:00 PM - 2:00 PM\" , \"Sunday 8:00 AM - 9:00 AM\"] },\r\n  ];\r\n\r\n  // Handle switching tabs\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabIndex(newValue);\r\n\r\n    // Reset unread count if the notifications tab is selected\r\n    if (newValue === 2) {\r\n      setUnreadCount(0);\r\n    }\r\n  };\r\n\r\n  // Handle class selection and update schedule options\r\n  const handleClassChange = (event) => {\r\n    const selectedClass = event.target.value;\r\n    setClassName(selectedClass);\r\n    \r\n    // Clear the selected schedule when class is changed\r\n    setSchedule(\"\");\r\n  };\r\n\r\n  // Handle schedule selection based on selected class\r\n  const handleScheduleChange = (event) => {\r\n    setSchedule(event.target.value);\r\n  };\r\n\r\n  // Add Class handler\r\n  const handleAddClass = () => {\r\n    // Check if className or schedule is empty\r\n    if (className.trim() === \"\" || schedule.trim() === \"\") {\r\n      setSnackbarSeverity(\"error\");\r\n      setSnackbarMessage(\"Error: Please fill in all class details.\");\r\n      setOpenSnackbar(true);\r\n      setNotifications((prev) => [\r\n        ...prev,\r\n        \"Error: Please fill in all class details.\",\r\n      ]);\r\n      return;\r\n    }\r\n\r\n    // Add the new class to the classes list\r\n    setClasses((prevClasses) => [\r\n      ...prevClasses,\r\n      { className, schedule },\r\n    ]);\r\n\r\n    // Success notification\r\n    const successMessage = `Class \"${className}\" scheduled for ${schedule} added successfully!`;\r\n    setNotifications((prev) => [...prev, successMessage]);\r\n    setUnreadCount((prevCount) => prevCount + 1); // Increase unread notification count\r\n    \r\n    setSnackbarSeverity(\"success\");\r\n    setSnackbarMessage(successMessage);\r\n    setOpenSnackbar(true);\r\n\r\n    // Clear the input fields\r\n    setClassName(\"\");\r\n    setSchedule(\"\");\r\n  };\r\n\r\n  // Enroll Member handler\r\n  const handleAddMember = () => {\r\n    if (newMember.trim() === \"\") {\r\n      setSnackbarSeverity(\"error\");\r\n      setSnackbarMessage(\"Error: Please provide a valid member name.\");\r\n      setOpenSnackbar(true);\r\n      setNotifications((prev) => [\r\n        ...prev,\r\n        \"Error: Please provide a valid member name.\",\r\n      ]);\r\n      return;\r\n    }\r\n\r\n    // Prevent duplicate members\r\n    if (members.includes(newMember)) {\r\n      setSnackbarSeverity(\"error\");\r\n      setSnackbarMessage(`Error: Member \"${newMember}\" already exists.`);\r\n      setOpenSnackbar(true);\r\n      setNotifications((prev) => [\r\n        ...prev,\r\n        `Error: Member \"${newMember}\" already exists.`,\r\n      ]);\r\n      return;\r\n    }\r\n\r\n    // Add the new member\r\n    setMembers((prev) => [...prev, newMember]);\r\n    setNotifications((prev) => [\r\n      ...prev,\r\n      `Member \"${newMember}\" enrolled!`,\r\n    ]);\r\n    setUnreadCount((prevCount) => prevCount + 1); // Increase unread notification count\r\n\r\n    setSnackbarSeverity(\"success\");\r\n    setSnackbarMessage(`Member \"${newMember}\" enrolled successfully!`);\r\n    setOpenSnackbar(true);\r\n\r\n    setNewMember(\"\");\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Class Management\r\n      </Typography>\r\n\r\n      <Tabs\r\n        value={tabIndex}\r\n        onChange={handleTabChange}\r\n        aria-label=\"Class management tabs\"\r\n      >\r\n        <Tab label=\"Add Classes\" />\r\n        <Tab label=\"Enroll Members\" />\r\n        <Tab\r\n          label=\"View Schedule\"\r\n          icon={<Badge badgeContent={unreadCount} color=\"error\" />}\r\n        />\r\n      </Tabs>\r\n\r\n      <TabPanel value={tabIndex} index={0}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Add a New Class\r\n        </Typography>\r\n        <Box sx={{ mb: 2 }}>\r\n          {/* Class Dropdown */}\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Class Name</InputLabel>\r\n            <Select\r\n              value={className}\r\n              onChange={handleClassChange}\r\n              label=\"Class Name\"\r\n            >\r\n              {classOptions.map((option, index) => (\r\n                <MenuItem key={index} value={option.name}>\r\n                  {option.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Schedule Dropdown */}\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Schedule</InputLabel>\r\n            <Select\r\n              value={schedule}\r\n              onChange={handleScheduleChange}\r\n              label=\"Schedule\"\r\n              disabled={!className} // Disable schedule dropdown until a class is selected\r\n            >\r\n              {className &&\r\n                classOptions\r\n                  .find((option) => option.name === className)\r\n                  .schedules.map((time, index) => (\r\n                    <MenuItem key={index} value={time}>\r\n                      {time}\r\n                    </MenuItem>\r\n                  ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddClass}>\r\n          Add Class\r\n        </Button>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={tabIndex} index={2}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          View Schedule\r\n        </Typography>\r\n        {/* Displaying added classes in the View Schedule tab */}\r\n        {classes.length === 0 ? (\r\n          <Typography>No classes scheduled yet.</Typography>\r\n        ) : (\r\n          classes.map((cls, index) => (\r\n            <Typography key={index}>\r\n              {cls.className} - {cls.schedule}\r\n            </Typography>\r\n          ))\r\n        )}\r\n      </TabPanel>\r\n\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n      >\r\n        <Alert onClose={handleCloseSnackbar} severity={snackbarSeverity}>\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ClassManagement;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}