{"ast":null,"code":"//Use this for adding new members.\n//Include a form with fields for member details (e.g., name, email, phone).\n//Make a POST request to your backend when the form is submitted.\n// Have Attendance \nimport React from\"react\";import{Box,Typography,Grid,Paper}from\"@mui/material\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AddMember(){var schedule={Monday:[{time:\"7:00 AM - 8:00 AM\",class:\"Cycling\"},{time:\"9:00 AM - 10:00 AM\",class:\"Boxing\"},{time:\"12:00 PM - 1:00 PM\",class:\"Pilates\"},{time:\"6:00 PM - 7:00 PM\",class:\"Zumba\"}],Tuesday:[{time:\"7:00 AM - 8:00 AM\",class:\"Pilates\"},{time:\"9:00 AM - 10:00 AM\",class:\"Cycling\"},{time:\"12:00 PM - 1:00 PM\",class:\"Zumba\"},{time:\"6:00 PM - 7:00 PM\",class:\"Boxing\"}],Wednesday:[{time:\"7:00 AM - 8:00 AM\",class:\"Boxing\"},{time:\"9:00 AM - 10:00 AM\",class:\"Pilates\"},{time:\"12:00 PM - 1:00 PM\",class:\"Cycling\"},{time:\"6:00 PM - 7:00 PM\",class:\"Zumba\"}],Thursday:[{time:\"7:00 AM - 8:00 AM\",class:\"Zumba\"},{time:\"9:00 AM - 10:00 AM\",class:\"Cycling\"},{time:\"12:00 PM - 1:00 PM\",class:\"Boxing\"},{time:\"6:00 PM - 7:00 PM\",class:\"Pilates\"}],Friday:[{time:\"7:00 AM - 8:00 AM\",class:\"Cycling\"},{time:\"9:00 AM - 10:00 AM\",class:\"Zumba\"},{time:\"12:00 PM - 1:00 PM\",class:\"Boxing\"},{time:\"6:00 PM - 7:00 PM\",class:\"Pilates\"}],Saturday:[{time:\"8:00 AM - 9:00 AM\",class:\"Pilates\"},{time:\"10:00 AM - 11:00 AM\",class:\"Cycling\"},{time:\"1:00 PM - 2:00 PM\",class:\"Zumba\"},{time:\"4:00 PM - 5:00 PM\",class:\"Boxing\"}],Sunday:[{time:\"8:00 AM - 9:00 AM\",class:\"Zumba\"},{time:\"10:00 AM - 11:00 AM\",class:\"Cycling\"},{time:\"1:00 PM - 2:00 PM\",class:\"Boxing\"},{time:\"4:00 PM - 5:00 PM\",class:\"Pilates\"}]};return/*#__PURE__*/_jsxs(Box,{sx:{padding:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Gym Class Schedule\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:Object.keys(schedule).map(function(day){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Paper,{sx:{padding:2,backgroundColor:\"#f4f4f4\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:day}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"column\",spacing:1,children:schedule[day].map(function(entry,index){return/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[entry.time,\" - \",entry.class]})},index);})})]})},day);})})]});}export default AddMember;","map":{"version":3,"names":["React","Box","Typography","Grid","Paper","jsx","_jsx","jsxs","_jsxs","AddMember","schedule","Monday","time","class","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","sx","padding","children","variant","gutterBottom","container","spacing","Object","keys","map","day","item","xs","sm","md","backgroundColor","direction","entry","index"],"sources":["C:/Users/olivi/OneDrive/Documents/GitHub/Example4402Project/frontend4402/src/componets/AddMember.js"],"sourcesContent":["//Use this for adding new members.\r\n//Include a form with fields for member details (e.g., name, email, phone).\r\n//Make a POST request to your backend when the form is submitted.\r\n// Have Attendance \r\n\r\nimport React from \"react\";\r\nimport { Box, Typography, Grid, Paper } from \"@mui/material\";\r\n\r\nfunction AddMember() {\r\n  const schedule = {\r\n    Monday: [\r\n      { time: \"7:00 AM - 8:00 AM\", class: \"Cycling\" },\r\n      { time: \"9:00 AM - 10:00 AM\", class: \"Boxing\" },\r\n      { time: \"12:00 PM - 1:00 PM\", class: \"Pilates\" },\r\n      { time: \"6:00 PM - 7:00 PM\", class: \"Zumba\" },\r\n    ],\r\n    Tuesday: [\r\n      { time: \"7:00 AM - 8:00 AM\", class: \"Pilates\" },\r\n      { time: \"9:00 AM - 10:00 AM\", class: \"Cycling\" },\r\n      { time: \"12:00 PM - 1:00 PM\", class: \"Zumba\" },\r\n      { time: \"6:00 PM - 7:00 PM\", class: \"Boxing\" },\r\n    ],\r\n    Wednesday: [\r\n      { time: \"7:00 AM - 8:00 AM\", class: \"Boxing\" },\r\n      { time: \"9:00 AM - 10:00 AM\", class: \"Pilates\" },\r\n      { time: \"12:00 PM - 1:00 PM\", class: \"Cycling\" },\r\n      { time: \"6:00 PM - 7:00 PM\", class: \"Zumba\" },\r\n    ],\r\n    Thursday: [\r\n      { time: \"7:00 AM - 8:00 AM\", class: \"Zumba\" },\r\n      { time: \"9:00 AM - 10:00 AM\", class: \"Cycling\" },\r\n      { time: \"12:00 PM - 1:00 PM\", class: \"Boxing\" },\r\n      { time: \"6:00 PM - 7:00 PM\", class: \"Pilates\" },\r\n    ],\r\n    Friday: [\r\n      { time: \"7:00 AM - 8:00 AM\", class: \"Cycling\" },\r\n      { time: \"9:00 AM - 10:00 AM\", class: \"Zumba\" },\r\n      { time: \"12:00 PM - 1:00 PM\", class: \"Boxing\" },\r\n      { time: \"6:00 PM - 7:00 PM\", class: \"Pilates\" },\r\n    ],\r\n    Saturday: [\r\n      { time: \"8:00 AM - 9:00 AM\", class: \"Pilates\" },\r\n      { time: \"10:00 AM - 11:00 AM\", class: \"Cycling\" },\r\n      { time: \"1:00 PM - 2:00 PM\", class: \"Zumba\" },\r\n      { time: \"4:00 PM - 5:00 PM\", class: \"Boxing\" },\r\n    ],\r\n    Sunday: [\r\n      { time: \"8:00 AM - 9:00 AM\", class: \"Zumba\" },\r\n      { time: \"10:00 AM - 11:00 AM\", class: \"Cycling\" },\r\n      { time: \"1:00 PM - 2:00 PM\", class: \"Boxing\" },\r\n      { time: \"4:00 PM - 5:00 PM\", class: \"Pilates\" },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Gym Class Schedule\r\n      </Typography>\r\n\r\n      {/* Render the Schedule in a Grid */}\r\n      <Grid container spacing={2}>\r\n        {Object.keys(schedule).map((day) => (\r\n          <Grid item xs={12} sm={6} md={4} key={day}>\r\n            <Paper sx={{ padding: 2, backgroundColor: \"#f4f4f4\" }}>\r\n              <Typography variant=\"h6\">{day}</Typography>\r\n              <Grid container direction=\"column\" spacing={1}>\r\n                {schedule[day].map((entry, index) => (\r\n                  <Grid item key={index}>\r\n                    <Typography variant=\"body1\">\r\n                      {entry.time} - {entry.class}\r\n                    </Typography>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AddMember;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,GAAG,CAAEC,UAAU,CAAEC,IAAI,CAAEC,KAAK,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7D,QAAS,CAAAC,SAASA,CAAA,CAAG,CACnB,GAAM,CAAAC,QAAQ,CAAG,CACfC,MAAM,CAAE,CACN,CAAEC,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAC/C,CAAED,IAAI,CAAE,oBAAoB,CAAEC,KAAK,CAAE,QAAS,CAAC,CAC/C,CAAED,IAAI,CAAE,oBAAoB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAChD,CAAED,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAC9C,CACDC,OAAO,CAAE,CACP,CAAEF,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAC/C,CAAED,IAAI,CAAE,oBAAoB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAChD,CAAED,IAAI,CAAE,oBAAoB,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAC9C,CAAED,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,QAAS,CAAC,CAC/C,CACDE,SAAS,CAAE,CACT,CAAEH,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,QAAS,CAAC,CAC9C,CAAED,IAAI,CAAE,oBAAoB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAChD,CAAED,IAAI,CAAE,oBAAoB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAChD,CAAED,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAC9C,CACDG,QAAQ,CAAE,CACR,CAAEJ,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAC7C,CAAED,IAAI,CAAE,oBAAoB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAChD,CAAED,IAAI,CAAE,oBAAoB,CAAEC,KAAK,CAAE,QAAS,CAAC,CAC/C,CAAED,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAChD,CACDI,MAAM,CAAE,CACN,CAAEL,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAC/C,CAAED,IAAI,CAAE,oBAAoB,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAC9C,CAAED,IAAI,CAAE,oBAAoB,CAAEC,KAAK,CAAE,QAAS,CAAC,CAC/C,CAAED,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAChD,CACDK,QAAQ,CAAE,CACR,CAAEN,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAC/C,CAAED,IAAI,CAAE,qBAAqB,CAAEC,KAAK,CAAE,SAAU,CAAC,CACjD,CAAED,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAC7C,CAAED,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,QAAS,CAAC,CAC/C,CACDM,MAAM,CAAE,CACN,CAAEP,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAC7C,CAAED,IAAI,CAAE,qBAAqB,CAAEC,KAAK,CAAE,SAAU,CAAC,CACjD,CAAED,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,QAAS,CAAC,CAC9C,CAAED,IAAI,CAAE,mBAAmB,CAAEC,KAAK,CAAE,SAAU,CAAC,CAEnD,CAAC,CAED,mBACEL,KAAA,CAACP,GAAG,EAACmB,EAAE,CAAE,CAAEC,OAAO,CAAE,CAAE,CAAE,CAAAC,QAAA,eACtBhB,IAAA,CAACJ,UAAU,EAACqB,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,oBAEtC,CAAY,CAAC,cAGbhB,IAAA,CAACH,IAAI,EAACsB,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAJ,QAAA,CACxBK,MAAM,CAACC,IAAI,CAAClB,QAAQ,CAAC,CAACmB,GAAG,CAAC,SAACC,GAAG,qBAC7BxB,IAAA,CAACH,IAAI,EAAC4B,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAZ,QAAA,cAC9Bd,KAAA,CAACJ,KAAK,EAACgB,EAAE,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEc,eAAe,CAAE,SAAU,CAAE,CAAAb,QAAA,eACpDhB,IAAA,CAACJ,UAAU,EAACqB,OAAO,CAAC,IAAI,CAAAD,QAAA,CAAEQ,GAAG,CAAa,CAAC,cAC3CxB,IAAA,CAACH,IAAI,EAACsB,SAAS,MAACW,SAAS,CAAC,QAAQ,CAACV,OAAO,CAAE,CAAE,CAAAJ,QAAA,CAC3CZ,QAAQ,CAACoB,GAAG,CAAC,CAACD,GAAG,CAAC,SAACQ,KAAK,CAAEC,KAAK,qBAC9BhC,IAAA,CAACH,IAAI,EAAC4B,IAAI,MAAAT,QAAA,cACRd,KAAA,CAACN,UAAU,EAACqB,OAAO,CAAC,OAAO,CAAAD,QAAA,EACxBe,KAAK,CAACzB,IAAI,CAAC,KAAG,CAACyB,KAAK,CAACxB,KAAK,EACjB,CAAC,EAHCyB,KAIV,CAAC,EACR,CAAC,CACE,CAAC,EACF,CAAC,EAZ4BR,GAahC,CAAC,EACR,CAAC,CACE,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAArB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}